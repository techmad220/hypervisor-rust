{"$message_type":"diagnostic","message":"failed to resolve: could not find `x86_64` in `arch`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs","byte_start":443,"byte_end":449,"line_start":13,"line_end":13,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"        let cpuid = unsafe { core::arch::x86_64::__cpuid(0x1) };","highlight_start":42,"highlight_end":48}],"label":"could not find `x86_64` in `arch`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `x86_64` in `arch`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs:13:42\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let cpuid = unsafe { core::arch::x86_64::__cpuid(0x1) };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `x86_64` in `arch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `x86_64` in `arch`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs","byte_start":805,"byte_end":811,"line_start":27,"line_end":27,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"            match core::arch::x86_64::_rdrand64_step(&mut res) {","highlight_start":31,"highlight_end":37}],"label":"could not find `x86_64` in `arch`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `x86_64` in `arch`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs:27:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match core::arch::x86_64::_rdrand64_step(&mut res) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `x86_64` in `arch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `x86_64` in `arch`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs","byte_start":1268,"byte_end":1274,"line_start":42,"line_end":42,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"            match core::arch::x86_64::_rdrand32_step(&mut res) {","highlight_start":31,"highlight_end":37}],"label":"could not find `x86_64` in `arch`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `x86_64` in `arch`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs:42:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match core::arch::x86_64::_rdrand32_step(&mut res) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `x86_64` in `arch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `x86_64` in `arch`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs","byte_start":1731,"byte_end":1737,"line_start":57,"line_end":57,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"            match core::arch::x86_64::_rdrand16_step(&mut res) {","highlight_start":31,"highlight_end":37}],"label":"could not find `x86_64` in `arch`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `x86_64` in `arch`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/random.rs:57:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            match core::arch::x86_64::_rdrand16_step(&mut res) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `x86_64` in `arch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `x86_64` in `arch`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs","byte_start":4405,"byte_end":4411,"line_start":146,"line_end":146,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"        let cpuid = unsafe { core::arch::x86_64::__cpuid(0x8000_0008) };","highlight_start":42,"highlight_end":48}],"label":"could not find `x86_64` in `arch`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `x86_64` in `arch`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs:146:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m146\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let cpuid = unsafe { core::arch::x86_64::__cpuid(0x8000_0008) };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `x86_64` in `arch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: could not find `x86_64` in `arch`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs","byte_start":4724,"byte_end":4730,"line_start":155,"line_end":155,"column_start":42,"column_end":48,"is_primary":true,"text":[{"text":"        let cpuid = unsafe { core::arch::x86_64::__cpuid(0x8000_000a) };","highlight_start":42,"highlight_end":48}],"label":"could not find `x86_64` in `arch`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m: failed to resolve: could not find `x86_64` in `arch`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs:155:42\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m155\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let cpuid = unsafe { core::arch::x86_64::__cpuid(0x8000_000a) };\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcould not find `x86_64` in `arch`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`#![feature]` may not be used on the stable release channel","code":{"code":"E0554","explanation":"Feature attributes are only allowed on the nightly release channel. Stable or\nbeta compilers will not comply.\n\nErroneous code example:\n\n```ignore (depends on release channel)\n#![feature(lang_items)] // error: `#![feature]` may not be used on the\n                        //        stable release channel\n```\n\nIf you need the feature, make sure to use a nightly release of the compiler\n(but be warned that the feature may be removed or altered in the future).\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs","byte_start":182,"byte_end":205,"line_start":5,"line_end":5,"column_start":35,"column_end":58,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"const_fn\", feature(const_mut_refs))] // GDT add_entry()","highlight_start":35,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the feature `const_mut_refs` has been stable since `1.83.0` and no longer requires an attribute to enable","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"remove the attribute","code":null,"level":"help","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs","byte_start":182,"byte_end":205,"line_start":5,"line_end":5,"column_start":35,"column_end":58,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"const_fn\", feature(const_mut_refs))] // GDT add_entry()","highlight_start":35,"highlight_end":58}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0554]\u001b[0m\u001b[0m\u001b[1m: `#![feature]` may not be used on the stable release channel\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs:5:35\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(feature = \"const_fn\", feature(const_mut_refs))] // GDT add_entry()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: remove the attribute\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the feature `const_mut_refs` has been stable since `1.83.0` and no longer requires an attribute to enable\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`#![feature]` may not be used on the stable release channel","code":{"code":"E0554","explanation":"Feature attributes are only allowed on the nightly release channel. Stable or\nbeta compilers will not comply.\n\nErroneous code example:\n\n```ignore (depends on release channel)\n#![feature(lang_items)] // error: `#![feature]` may not be used on the\n                        //        stable release channel\n```\n\nIf you need the feature, make sure to use a nightly release of the compiler\n(but be warned that the feature may be removed or altered in the future).\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs","byte_start":270,"byte_end":296,"line_start":6,"line_end":6,"column_start":44,"column_end":70,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"abi_x86_interrupt\", feature(abi_x86_interrupt))]","highlight_start":44,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0554]\u001b[0m\u001b[0m\u001b[1m: `#![feature]` may not be used on the stable release channel\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs:6:44\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(feature = \"abi_x86_interrupt\", feature(abi_x86_interrupt))]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"`#![feature]` may not be used on the stable release channel","code":{"code":"E0554","explanation":"Feature attributes are only allowed on the nightly release channel. Stable or\nbeta compilers will not comply.\n\nErroneous code example:\n\n```ignore (depends on release channel)\n#![feature(lang_items)] // error: `#![feature]` may not be used on the\n                        //        stable release channel\n```\n\nIf you need the feature, make sure to use a nightly release of the compiler\n(but be warned that the feature may be removed or altered in the future).\n"},"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs","byte_start":335,"byte_end":354,"line_start":7,"line_end":7,"column_start":37,"column_end":56,"is_primary":true,"text":[{"text":"#![cfg_attr(feature = \"step_trait\", feature(step_trait))]","highlight_start":37,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0554]\u001b[0m\u001b[0m\u001b[1m: `#![feature]` may not be used on the stable release channel\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/lib.rs:7:37\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![cfg_attr(feature = \"step_trait\", feature(step_trait))]\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `al`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":305,"byte_end":320,"line_start":14,"line_end":14,"column_start":31,"column_end":46,"is_primary":true,"text":[{"text":"            asm!(\"in al, dx\", out(\"al\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));","highlight_start":31,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `al`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:14:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"in al, dx\", out(\"al\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `dx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":322,"byte_end":335,"line_start":14,"line_end":14,"column_start":48,"column_end":61,"is_primary":true,"text":[{"text":"            asm!(\"in al, dx\", out(\"al\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));","highlight_start":48,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `dx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:14:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"in al, dx\", out(\"al\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":571,"byte_end":586,"line_start":25,"line_end":25,"column_start":31,"column_end":46,"is_primary":true,"text":[{"text":"            asm!(\"in ax, dx\", out(\"ax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));","highlight_start":31,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ax`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:25:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"in ax, dx\", out(\"ax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `dx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":588,"byte_end":601,"line_start":25,"line_end":25,"column_start":48,"column_end":61,"is_primary":true,"text":[{"text":"            asm!(\"in ax, dx\", out(\"ax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));","highlight_start":48,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `dx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:25:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"in ax, dx\", out(\"ax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `eax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":838,"byte_end":854,"line_start":36,"line_end":36,"column_start":32,"column_end":48,"is_primary":true,"text":[{"text":"            asm!(\"in eax, dx\", out(\"eax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));","highlight_start":32,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `eax`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:36:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"in eax, dx\", out(\"eax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `dx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":856,"byte_end":869,"line_start":36,"line_end":36,"column_start":50,"column_end":63,"is_primary":true,"text":[{"text":"            asm!(\"in eax, dx\", out(\"eax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));","highlight_start":50,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `dx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:36:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"in eax, dx\", out(\"eax\") value, in(\"dx\") port, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `dx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":1085,"byte_end":1098,"line_start":46,"line_end":46,"column_start":32,"column_end":45,"is_primary":true,"text":[{"text":"            asm!(\"out dx, al\", in(\"dx\") port, in(\"al\") value, options(nomem, nostack, preserves_flags));","highlight_start":32,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `dx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:46:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"out dx, al\", in(\"dx\") port, in(\"al\") value, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `al`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":1100,"byte_end":1114,"line_start":46,"line_end":46,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"            asm!(\"out dx, al\", in(\"dx\") port, in(\"al\") value, options(nomem, nostack, preserves_flags));","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `al`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:46:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"out dx, al\", in(\"dx\") port, in(\"al\") value, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `dx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":1318,"byte_end":1331,"line_start":55,"line_end":55,"column_start":32,"column_end":45,"is_primary":true,"text":[{"text":"            asm!(\"out dx, ax\", in(\"dx\") port, in(\"ax\") value, options(nomem, nostack, preserves_flags));","highlight_start":32,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `dx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:55:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"out dx, ax\", in(\"dx\") port, in(\"ax\") value, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":1333,"byte_end":1347,"line_start":55,"line_end":55,"column_start":47,"column_end":61,"is_primary":true,"text":[{"text":"            asm!(\"out dx, ax\", in(\"dx\") port, in(\"ax\") value, options(nomem, nostack, preserves_flags));","highlight_start":47,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ax`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:55:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"out dx, ax\", in(\"dx\") port, in(\"ax\") value, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `dx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":1552,"byte_end":1565,"line_start":64,"line_end":64,"column_start":33,"column_end":46,"is_primary":true,"text":[{"text":"            asm!(\"out dx, eax\", in(\"dx\") port, in(\"eax\") value, options(nomem, nostack, preserves_flags));","highlight_start":33,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `dx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:64:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"out dx, eax\", in(\"dx\") port, in(\"eax\") value, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `eax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs","byte_start":1567,"byte_end":1582,"line_start":64,"line_end":64,"column_start":48,"column_end":63,"is_primary":true,"text":[{"text":"            asm!(\"out dx, eax\", in(\"dx\") port, in(\"eax\") value, options(nomem, nostack, preserves_flags));","highlight_start":48,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `eax`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/port.rs:64:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            asm!(\"out dx, eax\", in(\"dx\") port, in(\"eax\") value, options(nomem, nostack, preserves_flags));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `rax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs","byte_start":12518,"byte_end":12531,"line_start":412,"line_end":412,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            in(\"rax\") rax,","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `rax`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs:412:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m412\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            in(\"rax\") rax,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ecx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs","byte_start":12545,"byte_end":12558,"line_start":413,"line_end":413,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            in(\"ecx\") ecx,","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ecx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs:413:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m413\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            in(\"ecx\") ecx,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `edx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs","byte_start":12572,"byte_end":12585,"line_start":414,"line_end":414,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"            in(\"edx\") edx,","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `edx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/instructions/tlb.rs:414:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m414\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            in(\"edx\") edx,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ecx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs","byte_start":6081,"byte_end":6097,"line_start":208,"line_end":208,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"                    in(\"ecx\") self.0,","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ecx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs:208:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m208\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"ecx\") self.0,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `eax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs","byte_start":6119,"byte_end":6133,"line_start":209,"line_end":209,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"                    out(\"eax\") low, out(\"edx\") high,","highlight_start":21,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `eax`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs:209:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    out(\"eax\") low, out(\"edx\") high,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `edx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs","byte_start":6135,"byte_end":6150,"line_start":209,"line_end":209,"column_start":37,"column_end":52,"is_primary":true,"text":[{"text":"                    out(\"eax\") low, out(\"edx\") high,","highlight_start":37,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `edx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs:209:37\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m209\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    out(\"eax\") low, out(\"edx\") high,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ecx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs","byte_start":6742,"byte_end":6758,"line_start":230,"line_end":230,"column_start":21,"column_end":37,"is_primary":true,"text":[{"text":"                    in(\"ecx\") self.0,","highlight_start":21,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ecx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs:230:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m230\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"ecx\") self.0,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `eax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs","byte_start":6780,"byte_end":6793,"line_start":231,"line_end":231,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"                    in(\"eax\") low, in(\"edx\") high,","highlight_start":21,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `eax`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs:231:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"eax\") low, in(\"edx\") high,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `edx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs","byte_start":6795,"byte_end":6809,"line_start":231,"line_end":231,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"                    in(\"eax\") low, in(\"edx\") high,","highlight_start":36,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `edx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/model_specific.rs:231:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m231\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"eax\") low, in(\"edx\") high,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ecx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs","byte_start":3144,"byte_end":3155,"line_start":83,"line_end":83,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    in(\"ecx\") 0,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ecx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs:83:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m83\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"ecx\") 0,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `rax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs","byte_start":3177,"byte_end":3191,"line_start":84,"line_end":84,"column_start":21,"column_end":35,"is_primary":true,"text":[{"text":"                    out(\"rax\") low, out(\"rdx\") high,","highlight_start":21,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `rax`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs:84:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    out(\"rax\") low, out(\"rdx\") high,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `rdx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs","byte_start":3193,"byte_end":3208,"line_start":84,"line_end":84,"column_start":37,"column_end":52,"is_primary":true,"text":[{"text":"                    out(\"rax\") low, out(\"rdx\") high,","highlight_start":37,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `rdx`: unknown register\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs:84:37\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    out(\"rax\") low, out(\"rdx\") high,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `ecx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs","byte_start":5672,"byte_end":5683,"line_start":153,"line_end":153,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"                    in(\"ecx\") 0,","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `ecx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs:153:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"ecx\") 0,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `rax`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs","byte_start":5705,"byte_end":5718,"line_start":154,"line_end":154,"column_start":21,"column_end":34,"is_primary":true,"text":[{"text":"                    in(\"rax\") low, in(\"rdx\") high,","highlight_start":21,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `rax`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs:154:21\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"rax\") low, in(\"rdx\") high,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"invalid register `rdx`: unknown register","code":null,"level":"error","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs","byte_start":5720,"byte_end":5734,"line_start":154,"line_end":154,"column_start":36,"column_end":50,"is_primary":true,"text":[{"text":"                    in(\"rax\") low, in(\"rdx\") high,","highlight_start":36,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: invalid register `rdx`: unknown register\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/registers/xcontrol.rs:154:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    in(\"rax\") low, in(\"rdx\") high,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 36 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 36 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0433, E0554.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0433, E0554.\u001b[0m\n"}
{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0433`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0433`.\u001b[0m\n"}
{"$message_type":"future_incompat","future_incompat_report":[{"diagnostic":{"$message_type":"diagnostic","message":"the calling convention \"x86-interrupt\" is not supported on this target","code":{"code":"unsupported_fn_ptr_calling_conventions","explanation":null},"level":"warning","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs","byte_start":31320,"byte_end":31366,"line_start":675,"line_end":675,"column_start":24,"column_end":70,"is_primary":true,"text":[{"text":"pub type HandlerFunc = extern \"x86-interrupt\" fn(InterruptStackFrame);","highlight_start":24,"highlight_end":70}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the calling convention \"x86-interrupt\" is not supported on this target\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs:675:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m675\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type HandlerFunc = extern \"x86-interrupt\" fn(InterruptStackFrame);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"the calling convention \"x86-interrupt\" is not supported on this target","code":{"code":"unsupported_fn_ptr_calling_conventions","explanation":null},"level":"warning","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs","byte_start":33238,"byte_end":33306,"line_start":717,"line_end":717,"column_start":5,"column_end":73,"is_primary":true,"text":[{"text":"    extern \"x86-interrupt\" fn(InterruptStackFrame, error_code: u64) -> !;","highlight_start":5,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the calling convention \"x86-interrupt\" is not supported on this target\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs:717:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m717\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    extern \"x86-interrupt\" fn(InterruptStackFrame, error_code: u64) -> !;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"the calling convention \"x86-interrupt\" is not supported on this target","code":{"code":"unsupported_fn_ptr_calling_conventions","explanation":null},"level":"warning","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs","byte_start":31763,"byte_end":31826,"line_start":685,"line_end":685,"column_start":35,"column_end":98,"is_primary":true,"text":[{"text":"pub type HandlerFuncWithErrCode = extern \"x86-interrupt\" fn(InterruptStackFrame, error_code: u64);","highlight_start":35,"highlight_end":98}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the calling convention \"x86-interrupt\" is not supported on this target\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs:685:35\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m685\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type HandlerFuncWithErrCode = extern \"x86-interrupt\" fn(InterruptStackFrame, error_code: u64);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"the calling convention \"x86-interrupt\" is not supported on this target","code":{"code":"unsupported_fn_ptr_calling_conventions","explanation":null},"level":"warning","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs","byte_start":32240,"byte_end":32318,"line_start":696,"line_end":696,"column_start":5,"column_end":83,"is_primary":true,"text":[{"text":"    extern \"x86-interrupt\" fn(InterruptStackFrame, error_code: PageFaultErrorCode);","highlight_start":5,"highlight_end":83}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the calling convention \"x86-interrupt\" is not supported on this target\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs:696:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m696\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    extern \"x86-interrupt\" fn(InterruptStackFrame, error_code: PageFaultErrorCode);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>\u001b[0m\n\n"}},{"diagnostic":{"$message_type":"diagnostic","message":"the calling convention \"x86-interrupt\" is not supported on this target","code":{"code":"unsupported_fn_ptr_calling_conventions","explanation":null},"level":"warning","spans":[{"file_name":"/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs","byte_start":32736,"byte_end":32787,"line_start":706,"line_end":706,"column_start":33,"column_end":84,"is_primary":true,"text":[{"text":"pub type DivergingHandlerFunc = extern \"x86-interrupt\" fn(InterruptStackFrame) -> !;","highlight_start":33,"highlight_end":84}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: the calling convention \"x86-interrupt\" is not supported on this target\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/data/data/com.termux/files/home/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/x86_64-0.14.13/src/structures/idt.rs:706:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m706\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub type DivergingHandlerFunc = extern \"x86-interrupt\" fn(InterruptStackFrame) -> !;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #130260 <https://github.com/rust-lang/rust/issues/130260>\u001b[0m\n\n"}}]}
